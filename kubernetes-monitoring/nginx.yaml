apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-app
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 3
  selector:
    matchLabels:
      app: nginx-app
  template:
    metadata:
      labels:
        app: nginx-app
    spec:
      containers:
        - name: nginx
          image: dochombo/otus:kubernetes-monitoringV1
          ports:
          - containerPort: 80
          env:
          resources:
            requests:
              cpu: 100m
              memory: 64Mi
            limits:
              cpu: 200m
              memory: 128Mi
---

apiVersion: v1
kind: Service
metadata:
  name: nginx-service
spec:
  type: ClusterIP
  selector:
    app: nginx-app
  ports:
  - name: http
    port: 80
    targetPort: 80
---

apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: nginx-prometheus-exporter
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app:nginx-prometheus-exporter
    spec:
      containers:
        - name:nginx-prometheus-exporter
          image: "nginx/nginx-prometheus-exporter:0.8.0"
          imagePullPolicy: Always
          args: ["-nginx.scrape-uri", "https://mywebsite/basic_status"]
          ports:
            - containerPort: 9113
              name: http

---
apiVersion: v1
kind: Service
metadata:
  name: nginx-prometheus-exporter
  annotations:
    prometheus.io/scrape: 'true'
    prometheus.io/port:   '9113'
spec:
  ports:
    - name: http
      port: 80
      protocol: TCP
      targetPort: 9113
  selector:
    app: nginx-prometheus-exporter
  type: ClusterIP